name: Build

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - 'master'
      - '!ci_test_*'
    tags-ignore:
      - '*'
  pull_request:
    branches:
      - 'master'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: rustup target add aarch64-unknown-linux-gnu x86_64-unknown-linux-gnu i686-unknown-linux-gnu powerpc-unknown-linux-gnu riscv64gc-unknown-linux-gnu wasm32-unknown-unknown
      - run: RUSTFLAGS="-C target-feature=+neon,-fp16" cargo build --target aarch64-unknown-linux-gnu
      - run: RUSTFLAGS="-C target-feature=+neon,+fp16" cargo +nightly build --target aarch64-unknown-linux-gnu --features nightly_f16,nightly_i8mm
      - run: RUSTFLAGS="-C target-feature=+sse4.1" cargo build --target i686-unknown-linux-gnu
      - run: cargo build --target powerpc-unknown-linux-gnu
      - run: cargo build --target riscv64gc-unknown-linux-gnu
      - run: RUSTFLAGS="-C target-feature=+sse4.1" cargo build --target x86_64-unknown-linux-gnu
      - run: RUSTFLAGS="-C target-feature=+sse4.1,+f16c" cargo +nightly build --features nightly_f16 --target x86_64-unknown-linux-gnu
      - run: RUSTFLAGS="-C target-feature=+avx2,+f16c" cargo +nightly build --features nightly_f16 --target x86_64-unknown-linux-gnu
      - run: RUSTFLAGS="-C target-feature=+avx2" cargo build --target x86_64-unknown-linux-gnu
      - run: RUSTFLAGS="-C target-feature=+simd128" cargo build --target wasm32-unknown-unknown

  clippy:
    name: Clippy
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: rustup component add clippy
      - run: cargo clippy -- -D warnings

  clippy_nightly:
    name: Clippy Nightly
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - run: rustup component add clippy
      - run: rustup target add wasm32-unknown-unknown
      - run: cargo clippy --all-features -- -D warnings
      - run: RUSTFLAGS="-C target-feature=+simd128" cargo clippy --all-features --target wasm32-unknown-unknown -- -D warnings

  tests_x86:
    name: Testing x86
    strategy:
      matrix:
        os: [ avx, sse, "", nightly_f16 ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo +nightly test --features "${{ matrix.feature }}"

  tests_arm:
    name: Testing ARM
    strategy:
      matrix:
        os: [ "", rdm, nightly_i8mm, nightly_f16 ]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo +nightly test --features "${{ matrix.feature }}"

  fuzz_rgba_8bit:
    name: Fuzzing 8bit
    runs-on: macos-latest
    strategy:
      matrix:
        feature: [ rdm, "" ]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo install cargo-fuzz
      - run: cargo fuzz run resize_rgba --features "${{ matrix.feature }}" -- -max_total_time=15
      - run: cargo fuzz run resize_rgb --features "${{ matrix.feature }}" -- -max_total_time=15
      - run: cargo fuzz run resize_cbcr8 --features "${{ matrix.feature }}" -- -max_total_time=15
      - run: cargo fuzz run resize_plane --features "${{ matrix.feature }}" -- -max_total_time=15
      - run: cargo fuzz run resize_rgba_u16 --features "${{ matrix.feature }}" -- -max_total_time=15

  fuzz_nightly_arm:
    name: Fuzzing 8bit
    runs-on: macos-latest
    strategy:
      matrix:
        feature: [ nightly_i8mm ]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo install cargo-fuzz
      - run: cargo fuzz run resize_rgba --features ${{ matrix.feature }} -- -max_total_time=15
      - run: cargo fuzz run resize_rgb --features ${{ matrix.feature }} -- -max_total_time=15
      - run: cargo fuzz run resize_cbcr8 --features ${{ matrix.feature }} -- -max_total_time=15

  fuzz_rgba_8bit_x86_64:
    name: Fuzzing 8bit x86_64
    strategy:
      matrix:
        feature: [ sse, avx, "" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo install cargo-fuzz
      - run: cargo fuzz run resize_rgba --features "${{ matrix.feature }}" -- -max_total_time=15
      - run: cargo fuzz run resize_rgb --features "${{ matrix.feature }}" -- -max_total_time=15
      - run: cargo fuzz run resize_cbcr8 --features "${{ matrix.feature }}" -- -max_total_time=15
      - run: cargo fuzz run resize_plane --features "${{ matrix.feature }}" -- -max_total_time=15

  fuzz_rgba_8bit_x86_64_color_spaces:
    name: Fuzzing 8bit x86_64 ColorSpaces
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo install cargo-fuzz
      - run: cargo fuzz run colorspaces --features colorspaces -- -max_total_time=10

  fuzz_rgba_high_bit_arm:
    name: Fuzzing High bit-depth ARM
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo install cargo-fuzz
      - run: cargo fuzz run resize_rgba_u16 -- -max_total_time=15
      - run: cargo fuzz run resize_rgba_f16 -- -max_total_time=15
      - run: cargo fuzz run resize_rgb_u16 -- -max_total_time=15
      - run: cargo fuzz run resize_rgb_f16 -- -max_total_time=15
      - run: cargo fuzz run resize_cbcr16 -- -max_total_time=15
      - run: cargo fuzz run resize_cbcr_f16 -- -max_total_time=15
      - run: cargo fuzz run resize_plane_u16 -- -max_total_time=15
  
  fuzz_rgba_high_bit_arm_rdm:
    name: Fuzzing High bit-depth RDM
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo install cargo-fuzz
      - run: cargo fuzz run resize_rgba_u16 --features rdm -- -max_total_time=15
      - run: cargo fuzz run resize_rgb_u16 --features rdm -- -max_total_time=15
      - run: cargo fuzz run resize_plane_u16 --features rdm -- -max_total_time=15

  fuzz_rgba_high_bit:
    name: Fuzzing High bit-depth
    strategy:
      matrix:
        feature: [ sse, avx, "" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo install cargo-fuzz
      - run: cargo fuzz run resize_rgba_u16 --features "${{ matrix.feature }}" -- -max_total_time=15
      - run: cargo fuzz run resize_rgba_f16 --features "${{ matrix.feature }}" -- -max_total_time=15
      - run: cargo fuzz run resize_rgb_u16 --features "${{ matrix.feature }}" -- -max_total_time=15
      - run: cargo fuzz run resize_rgb_f16 --features "${{ matrix.feature }}" -- -max_total_time=15
      - run: cargo fuzz run resize_cbcr16 --features "${{ matrix.feature }}" -- -max_total_time=15
      - run: cargo fuzz run resize_cbcr_f16 --features "${{ matrix.feature }}" -- -max_total_time=15
      - run: cargo fuzz run resize_plane_u16 --features "${{ matrix.feature }}" -- -max_total_time=15

  fuzz_rgba_f32_arm:
    name: Fuzzing floating point ARM
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo install cargo-fuzz
      - run: cargo fuzz run resize_rgba_f32 -- -max_total_time=15
      - run: cargo fuzz run resize_rgb_f32 -- -max_total_time=15
      - run: cargo fuzz run resize_cbcr_f32 -- -max_total_time=15
      - run: cargo fuzz run resize_plane_f32 -- -max_total_time=15

  fuzz_rgba_f32:
    name: Fuzzing floating point
    strategy:
      matrix:
        feature: [ sse, avx, "" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo install cargo-fuzz
      - run: cargo fuzz run resize_rgba_f32 --features "${{ matrix.feature }}" -- -max_total_time=15
      - run: cargo fuzz run resize_rgb_f32 --features "${{ matrix.feature }}" -- -max_total_time=15
      - run: cargo fuzz run resize_cbcr_f32 --features "${{ matrix.feature }}" -- -max_total_time=15
      - run: cargo fuzz run resize_plane_f32 --features "${{ matrix.feature }}" -- -max_total_time=15